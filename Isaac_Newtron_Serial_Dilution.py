# -*- coding: utf-8 -*-
"""Serial Dilution Jacopo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fo-bBjbn7n01XjmxDZFHr3Gzm5aW8J4k
"""

from opentrons import protocol_api

metadata = {'apiLevel': '2.8'}
def run(protocol:protocol_api.ProtocolContext):
#labware
  plate = protocol.load_labware('costar3370flatbottomtransparent_96_wellplate_200ul', 3)
  tiprack_1 = protocol.load_labware('opentrons_96_tiprack_300ul', 1)
  p300 = protocol.load_instrument('p300_multi_gen2', 'left', tip_racks=[tiprack_1])
  reservoir = protocol.load_labware('4ti0131_12_reservoir_21000ul', 2)
  #A1 Flourescein
  #A2 PBS
  #rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G','H']
  columns = [1,2,3,4,5,6,7,8,9,10,11,12]
  #commands
  p300.pick_up_tip()
  p300.transfer(200, reservoir["A1"], plate["A1"], new_tip = "never")
  p300.drop_tip()
  #PBS into all wells #range of A2 to A12
  p300.pick_up_tip()
  for i in columns[1:]:
    p300.transfer(100, reservoir["A2"], plate[f"A{i}"], new_tip = "never")
  p300.drop_tip()
  #serially dilute from A1 with fluorescein to A12. 
  p300.pick_up_tip()
  for i in columns[:10]:
      p300.transfer(100, plate[f"A{i}"], plate[f"A{i+1}"], mix_after=(3, 50), new_tip = "never")
  p300.aspirate(100, plate["A11"])
  p300.drop_tip()